// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace BlogManagement.Infrastructure.EFCore.Migrations;

[DbContext(typeof(BlogDbContext))]
internal partial class BlogDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasAnnotation("Relational:MaxIdentifierLength", 128)
            .HasAnnotation("ProductVersion", "5.0.17")
            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

        modelBuilder.Entity("BlogManagement.Domain.ArticleAggregate.Article", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("CanonicalAddress")
                    .HasMaxLength(1000)
                    .HasColumnType("nvarchar(1000)");

                b.Property<long>("CategoryId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreationDate")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Keywords")
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("MetaDescription")
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<string>("Picture")
                    .HasMaxLength(1000)
                    .HasColumnType("nvarchar(1000)");

                b.Property<string>("PictureAlt")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("PictureTitle")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTime>("PublishDate")
                    .HasColumnType("datetime2");

                b.Property<string>("ShortDescription")
                    .HasMaxLength(1000)
                    .HasColumnType("nvarchar(1000)");

                b.Property<string>("Slug")
                    .HasMaxLength(600)
                    .HasColumnType("nvarchar(600)");

                b.Property<string>("Title")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Articles");
            });

        modelBuilder.Entity("BlogManagement.Domain.ArticleCategoryAggregate.ArticleCategory", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("CanonicalAddress")
                    .HasMaxLength(1000)
                    .HasColumnType("nvarchar(1000)");

                b.Property<DateTime>("CreationDate")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .HasMaxLength(2000)
                    .HasColumnType("nvarchar(2000)");

                b.Property<string>("Keywords")
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("MetaDescription")
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<string>("Name")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("Picture")
                    .HasMaxLength(1000)
                    .HasColumnType("nvarchar(1000)");

                b.Property<string>("PictureAlt")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("PictureTitle")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int>("ShowOrder")
                    .HasColumnType("int");

                b.Property<string>("Slug")
                    .HasMaxLength(700)
                    .HasColumnType("nvarchar(700)");

                b.HasKey("Id");

                b.ToTable("ArticleCategories");
            });

        modelBuilder.Entity("BlogManagement.Domain.ArticleAggregate.Article", b =>
            {
                b.HasOne("BlogManagement.Domain.ArticleCategoryAggregate.ArticleCategory", "Category")
                    .WithMany("Articles")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

        modelBuilder.Entity("BlogManagement.Domain.ArticleCategoryAggregate.ArticleCategory", b => b.Navigation("Articles"));
    }
}
